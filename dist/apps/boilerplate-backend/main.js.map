{
  "version": 3,
  "sources": [
    "webpack:///webpack/bootstrap",
    "webpack:///./apps/boilerplate-backend/src/app/controllers/app.controller.ts",
    "webpack:///./apps/boilerplate-backend/src/app/modules/app.module.ts",
    "webpack:///./apps/boilerplate-backend/src/app/services/app.service.ts",
    "webpack:///./apps/boilerplate-backend/src/app/services/config.service.ts",
    "webpack:///./apps/boilerplate-backend/src/main.ts",
    "webpack:///external \"@nestjs/common\"",
    "webpack:///external \"@nestjs/core\"",
    "webpack:///external \"@nestjs/typeorm\"",
    "webpack:///external \"dotenv\"",
    "webpack:///external \"tslib\""
  ],
  "names": [],
  "mappings": "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",
  "file": "main.js",
  "sourcesContent": [
    " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n",
    "import { Controller, Get } from '@nestjs/common'\n\nimport { AppService } from '../services/app.service'\n\n@Controller()\nexport class AppController {\n  @Get('/version')\n  getVersion(): string {\n    return this.appService.getVersion()\n  }\n\n  @Get('/health')\n  getHealth(): null {\n    return null\n  }\n\n  constructor(private readonly appService: AppService) {}\n}\n",
    "import { Module } from '@nestjs/common'\n\nimport { AppController } from '../controllers/app.controller'\nimport { AppService } from '../services/app.service'\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { configService } from '../services/config.service'\n\n@Module({\n  imports: [TypeOrmModule.forRoot(configService.getTypeOrmConfig())],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n",
    "import { version } from '../../../../../package.json'\nimport { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {\n  getVersion() {\n    return version\n  }\n}\n",
    "import { TypeOrmModuleOptions } from '@nestjs/typeorm'\n\nimport { config } from 'dotenv'\n\nconfig()\n\nclass ConfigService {\n  constructor(private env: { [k: string]: string | undefined }) {}\n\n  private getValue(key: string, throwOnMissing = true): string {\n    const value = this.env[key]\n    if (!value && throwOnMissing) {\n      throw new Error(`config error - missing env.${key}`)\n    }\n\n    return value\n  }\n\n  public ensureValues(keys: string[]) {\n    keys.forEach((k) => this.getValue(k, true))\n    return this\n  }\n\n  public getPort() {\n    return this.getValue('PORT', true)\n  }\n\n  public isProduction() {\n    const mode = this.getValue('MODE', false)\n    return mode != 'DEV'\n  }\n\n  public getTypeOrmConfig(): TypeOrmModuleOptions {\n    return {\n      type: 'postgres',\n\n      host: this.getValue('POSTGRES_HOST'),\n      port: parseInt(this.getValue('POSTGRES_PORT')),\n      username: this.getValue('POSTGRES_USER'),\n      password: this.getValue('POSTGRES_PASSWORD'),\n      database: this.getValue('POSTGRES_DATABASE'),\n\n      entities: ['**/*.entity{.ts,.js}'],\n\n      migrationsTableName: 'migration',\n\n      migrations: ['src/migration/*.ts'],\n\n      cli: {\n        migrationsDir: 'src/migration',\n      },\n\n      ssl: this.isProduction(),\n    }\n  }\n}\n\nconst configService = new ConfigService(process.env).ensureValues([\n  'POSTGRES_HOST',\n  'POSTGRES_PORT',\n  'POSTGRES_USER',\n  'POSTGRES_PASSWORD',\n  'POSTGRES_DATABASE',\n])\n\nexport { configService }\n",
    "/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common'\nimport { NestFactory } from '@nestjs/core'\n\nimport { AppModule } from './app/modules/app.module'\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule)\n  const globalPrefix = 'api'\n  app.setGlobalPrefix(globalPrefix)\n  const port = process.env.PORT || 3333\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix)\n  })\n}\n\nbootstrap()\n",
    "module.exports = require(\"@nestjs/common\");",
    "module.exports = require(\"@nestjs/core\");",
    "module.exports = require(\"@nestjs/typeorm\");",
    "module.exports = require(\"dotenv\");",
    "module.exports = require(\"tslib\");"
  ],
  "sourceRoot": ""
}
